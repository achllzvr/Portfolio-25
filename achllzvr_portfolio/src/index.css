@tailwind base;
@tailwind components;
@tailwind utilities;

/* Global custom layer */
@layer base {
  html, body, #root { height:100%; width:100%; }
  body { color:#ffffff; -webkit-font-smoothing:antialiased; background:#0b0d10; }
  ::selection { background:rgba(174,0,1,0.30); color:#fff; }
  /* Light theme overrides */
  .theme-light, .theme-light body { color:#111418; background:#e9ebee; }

  .theme-light .chip-shell { box-shadow: 0 0 0 1px rgba(0,0,0,0.10), 0 0 16px -6px rgba(0,0,0,0.28) inset, 0 0 20px -8px rgba(0,0,0,0.32) inset; }
  .theme-light .chip-active { border-color: rgba(174,0,1,0.55); }
  /* Brighter glowing red titles in light theme */
  .theme-light .chip-title { 
    color:#c40000; 
    text-shadow:0 0 2px rgba(255,70,70,0.55), 0 0 5px rgba(255,90,90,0.35), 0 0 10px rgba(174,0,1,0.35);
  }
  .theme-light .glow-overlay { mix-blend-mode: multiply; }
  .theme-light .signal-path { filter: drop-shadow(0 0 4px rgba(0,0,0,0.35)); }
  .theme-light svg path { stroke: #1d1f22; }
  .theme-light .chip-shell:hover { box-shadow: 0 0 0 1px rgba(0,0,0,0.18), 0 0 10px 2px rgba(174,0,1,0.35), 0 0 14px 4px rgba(174,0,1,0.15); }

  .theme-light .animate-guide-spin { color: #222; }
}

@layer components {
  .chip-shell { position:relative; border-radius:0.75rem; border:1px solid rgba(255,255,255,0.10); background:rgba(255,255,255,0.05); backdrop-filter:blur(8px); box-shadow:inset 0 0 0 1px rgba(255,255,255,0.08); transition:all .3s cubic-bezier(.22,.61,.36,1); will-change:transform; }
  .chip-active { border-color:rgba(174,0,1,0.55); box-shadow:0 0 0 1px rgba(255,255,255,0.16), 0 0 10px 2px rgba(174,0,1,0.34); }
  .chip-title { 
    font-family:'JetBrains Mono', monospace; 
    letter-spacing:0.02em; 
    font-size:0.875rem; 
    text-transform:uppercase; 
    font-weight:600;
    color:#ff3a3a; 
    text-shadow:0 0 3px rgba(255,58,58,0.85), 0 0 8px rgba(174,0,1,0.55), 0 0 14px rgba(174,0,1,0.35);
  }
  /* Smooth detail expand/collapse */
  .detail-anim { 
    max-height:0; 
    opacity:0; 
    overflow:hidden; 
    transition: max-height 520ms cubic-bezier(.22,.61,.36,1), opacity 420ms ease, filter 520ms ease; 
    will-change:max-height,opacity; 
  }
  .detail-open { max-height:640px; opacity:1; }
  .detail-closed { pointer-events:none; }
  /* Upward-expanding detail panel (position above the chip) */
    .detail-up { 
      position: absolute; 
      bottom: calc(100% + 8px); 
      left: 0; 
      right: 0; 
      transform-origin: bottom center; 
      border-radius: 0.75rem; 
      padding: 0.75rem; 
      background: rgba(255,255,255,0.04); 
      border: 1px solid rgba(255,255,255,0.06); 
      box-shadow: inset 0 0 0 1px rgba(255,255,255,0.02), 0 8px 20px -8px rgba(0,0,0,0.6); 
      z-index: 40; 
    }
    .detail-up.detail-closed { transform: translateY(6px); opacity:0; }
    .detail-up.detail-open { transform: translateY(0); opacity:1; }
  /* Downward-expanding detail panel styled like chip shells */
  .detail-down { position: absolute; top: calc(100% + 8px); left: 0; right: 0; transform-origin: top center; z-index: 40; }
  .detail-down.detail-closed { transform: translateY(-6px); }
  .detail-down.detail-open { transform: translateY(0); }
  /* Ensure chip-shell styling applied to detail wrappers shows a padded content area */
  .chip-shell.detail-down { padding: 0.75rem; }
  .chip-shell.detail-up { padding: 0.75rem; }
  .detail-up.detail-closed { transform: translateY(6px); opacity: 0; pointer-events: none; }
  .detail-up.detail-open { transform: translateY(0); opacity: 1; pointer-events: auto; }
  .motion-reduce .detail-anim { transition:none !important; }
  .scroll-thin { scrollbar-width: thin; }
  /* Explicit hover override to ensure red accent aura replaces any cached cyan */
  .chip-shell:hover {
    box-shadow: 0 0 0 1px rgba(255,255,255,0.16), 0 0 12px 3px rgba(174,0,1,0.42), 0 0 20px 6px rgba(174,0,1,0.20);
    border-color: rgba(174,0,1,0.48);
  }
}

@layer utilities {
  .transition-theme { transition: background-color 700ms ease, color 600ms ease, box-shadow 600ms ease, border-color 600ms ease, fill 600ms ease, stroke 600ms ease; }
  .glass { background:rgba(255,255,255,0.05); backdrop-filter:blur(8px); border:1px solid rgba(255,255,255,0.10); }
  .no-select { user-select: none; }
  @keyframes float { 0%,100% { transform: translateY(0px); } 50% { transform: translateY(-10px); } }
  @keyframes signal-move { to { stroke-dashoffset: -2000; } }
  @keyframes beacon { 0%,100% { opacity:.15; transform: scale(1); } 50% { opacity:.7; transform: scale(1.6); } }
  .signal-path { animation: signal-move 1.2s linear forwards; filter: drop-shadow(0 0 6px rgba(255,255,255,0.6)); }
  .beacon { animation: beacon 1.2s ease-in-out infinite; }
  .glow-overlay { 
    background:
      radial-gradient(circle 900px at var(--pointer-x,50%) var(--pointer-y,50%), rgba(255,255,255,0.12), transparent 70%),
      radial-gradient(circle 1400px at var(--pointer-x,50%) var(--pointer-y,50%), rgba(255,255,255,0.05), transparent 75%),
      radial-gradient(circle 2000px at var(--pointer-x,50%) var(--pointer-y,50%), rgba(255,255,255,0.025), transparent 80%);
    mix-blend-mode: screen;
  }
  @keyframes guide-spin {
    0% { transform: rotate(0deg); }
    70% { transform: rotate(350deg); }
    100% { transform: rotate(360deg); }
  }

  .animate-guide-spin {
    animation: guide-spin 2s ease-in-out infinite;
  }

  @keyframes fadeSlide { 0% { opacity:0; transform: translateY(-6px); } 60% { opacity:1; transform: translateY(2px); } 100% { opacity:1; transform: translateY(0); } }
  @keyframes fadeStagger { 0% { opacity:0; transform: translateY(4px); } 40% { opacity:.7; } 100% { opacity:1; transform: translateY(0); } }

  @media (prefers-reduced-motion: reduce) {
    .animate-guide-spin { animation: none; }
    [class*='fadeSlide'], [class*='fadeStagger'] { animation: none !important; }
  }

  /* Motion reduction override */
  @media (prefers-reduced-motion: reduce) {
    .animate-guide-spin { animation: none; }
  }

  /* Explicit runtime toggle for motion-off (applied via root .motion-reduce class) */
  .motion-reduce *,
  .motion-reduce *::before,
  .motion-reduce *::after { animation: none !important; transition: none !important; }
  .motion-reduce .signal-path { animation: none !important; }
  .motion-reduce .beacon { animation: none !important; }
  .motion-reduce .transition-theme { transition: none !important; }
}

